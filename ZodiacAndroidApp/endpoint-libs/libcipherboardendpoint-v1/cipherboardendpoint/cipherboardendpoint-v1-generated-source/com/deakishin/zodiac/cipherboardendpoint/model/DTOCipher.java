/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-10-17 16:43:55 UTC)
 * on 2016-12-06 at 13:33:45 UTC 
 * Modify at your own risk.
 */

package com.deakishin.zodiac.cipherboardendpoint.model;

/**
 * Model definition for DTOCipher.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the cipherboardendpoint. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DTOCipher extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String authorAvatarMarkup;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long authorId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String authorName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cipherMarkup;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long createdMillisecAgo;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float difficulty;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxSolvedCount;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float reward;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String solution;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String solvedByAvatarMarkup;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long solvedById;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String solvedByName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean solvedByUser;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer solvedCount;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer solvingCount;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthorAvatarMarkup() {
    return authorAvatarMarkup;
  }

  /**
   * @param authorAvatarMarkup authorAvatarMarkup or {@code null} for none
   */
  public DTOCipher setAuthorAvatarMarkup(java.lang.String authorAvatarMarkup) {
    this.authorAvatarMarkup = authorAvatarMarkup;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getAuthorId() {
    return authorId;
  }

  /**
   * @param authorId authorId or {@code null} for none
   */
  public DTOCipher setAuthorId(java.lang.Long authorId) {
    this.authorId = authorId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthorName() {
    return authorName;
  }

  /**
   * @param authorName authorName or {@code null} for none
   */
  public DTOCipher setAuthorName(java.lang.String authorName) {
    this.authorName = authorName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getCipherMarkup() {
    return cipherMarkup;
  }

  /**
   * @param cipherMarkup cipherMarkup or {@code null} for none
   */
  public DTOCipher setCipherMarkup(java.lang.String cipherMarkup) {
    this.cipherMarkup = cipherMarkup;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getCreatedMillisecAgo() {
    return createdMillisecAgo;
  }

  /**
   * @param createdMillisecAgo createdMillisecAgo or {@code null} for none
   */
  public DTOCipher setCreatedMillisecAgo(java.lang.Long createdMillisecAgo) {
    this.createdMillisecAgo = createdMillisecAgo;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * @param description description or {@code null} for none
   */
  public DTOCipher setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getDifficulty() {
    return difficulty;
  }

  /**
   * @param difficulty difficulty or {@code null} for none
   */
  public DTOCipher setDifficulty(java.lang.Float difficulty) {
    this.difficulty = difficulty;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public DTOCipher setId(java.lang.Long id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxSolvedCount() {
    return maxSolvedCount;
  }

  /**
   * @param maxSolvedCount maxSolvedCount or {@code null} for none
   */
  public DTOCipher setMaxSolvedCount(java.lang.Integer maxSolvedCount) {
    this.maxSolvedCount = maxSolvedCount;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getReward() {
    return reward;
  }

  /**
   * @param reward reward or {@code null} for none
   */
  public DTOCipher setReward(java.lang.Float reward) {
    this.reward = reward;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSolution() {
    return solution;
  }

  /**
   * @param solution solution or {@code null} for none
   */
  public DTOCipher setSolution(java.lang.String solution) {
    this.solution = solution;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSolvedByAvatarMarkup() {
    return solvedByAvatarMarkup;
  }

  /**
   * @param solvedByAvatarMarkup solvedByAvatarMarkup or {@code null} for none
   */
  public DTOCipher setSolvedByAvatarMarkup(java.lang.String solvedByAvatarMarkup) {
    this.solvedByAvatarMarkup = solvedByAvatarMarkup;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getSolvedById() {
    return solvedById;
  }

  /**
   * @param solvedById solvedById or {@code null} for none
   */
  public DTOCipher setSolvedById(java.lang.Long solvedById) {
    this.solvedById = solvedById;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSolvedByName() {
    return solvedByName;
  }

  /**
   * @param solvedByName solvedByName or {@code null} for none
   */
  public DTOCipher setSolvedByName(java.lang.String solvedByName) {
    this.solvedByName = solvedByName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSolvedByUser() {
    return solvedByUser;
  }

  /**
   * @param solvedByUser solvedByUser or {@code null} for none
   */
  public DTOCipher setSolvedByUser(java.lang.Boolean solvedByUser) {
    this.solvedByUser = solvedByUser;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSolvedCount() {
    return solvedCount;
  }

  /**
   * @param solvedCount solvedCount or {@code null} for none
   */
  public DTOCipher setSolvedCount(java.lang.Integer solvedCount) {
    this.solvedCount = solvedCount;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSolvingCount() {
    return solvingCount;
  }

  /**
   * @param solvingCount solvingCount or {@code null} for none
   */
  public DTOCipher setSolvingCount(java.lang.Integer solvingCount) {
    this.solvingCount = solvingCount;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * @param title title or {@code null} for none
   */
  public DTOCipher setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  @Override
  public DTOCipher set(String fieldName, Object value) {
    return (DTOCipher) super.set(fieldName, value);
  }

  @Override
  public DTOCipher clone() {
    return (DTOCipher) super.clone();
  }

}
